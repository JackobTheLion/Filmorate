CREATE TABLE filmorate_users (
  user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(50) NOT NULL,
  login varchar(50) NOT NULL,
  name varchar(50),
  birthday date
);

ALTER TABLE filmorate_users ADD CONSTRAINT UC_email UNIQUE (email);

ALTER TABLE filmorate_users ADD CONSTRAINT UC_login UNIQUE (login);

CREATE TABLE mpa (
  mpa_id Integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  mpa varchar(5) NOT NULL
);

CREATE TABLE genre (
  genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE films (
  film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(50) UNIQUE NOT NULL,
  description varchar(255),
  release_date date NOT NULL,
  duration integer,
  rating integer REFERENCES mpa (mpa_id)
  CONSTRAINT check_dates CHECK (release_date > '1895-12-28')

);

CREATE TABLE likes (
  film_id integer NOT NULL REFERENCES films (film_id),
  user_id integer NOT NULL REFERENCES filmorate_users (user_id),
  PRIMARY KEY (film_id, user_id)
);

CREATE TABLE film_genre (
  film_id integer NOT NULL REFERENCES films (film_id),
  genre_id integer NOT NULL REFERENCES genre (genre_id),
  PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE friends (
  user1_id integer NOT NULL REFERENCES filmorate_users (user_id),
  user2_id integer NOT NULL REFERENCES filmorate_users (user_id),
  confirmed Boolean DEFAULT false,
  PRIMARY KEY (user1_id, user2_id)
);

ALTER TABLE friends ADD CONSTRAINT not_self_friend CHECK (user1_id != user2_id);